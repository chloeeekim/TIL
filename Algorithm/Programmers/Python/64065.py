"""

튜플 : https://school.programmers.co.kr/learn/courses/30/lessons/64065

튜플을 표현하는 집합이 담긴 문자열 s가 주어졌을 때, s가 표현하는 튜플을 구하는 문제
- n개의 원소를 가진 튜플을 n-튜플이라고 하며, (a1, a2, a3, ..., an)과 같이 표현할 수 있다
- 튜플은 다음과 같은 성질을 지닌다
    - 중복된 원소가 있을 수 있다
    - 원소에 정해진 순서가 있으며, 원소의 순서가 다르면 서로 다른 튜플이다 (e.g., (1, 2, 3) != (1, 3, 2))
    - 튜플의 원소 개수는 유한하다
- 원소의 개수가 n개이고, 중복되는 원소가 없는 튜플이 주어질 때, 이는 다음과 같은 집합으로 표현할 수 있다
    - {{a1}, {a1, a2}, {a1, a2, a3}, {a1, a2, a3, a4}, ..., {a1, a2, a3, ..., an}}
    - 이때, 집합은 원소의 순서가 바뀌어도 상관 없다
    - 튜플이 (2, 1, 3, 4)인 경우, {{2, 1, 3, 4}, {2}, {2, 1, 3}, {2, 1}}나 {{1, 2, 3}, {2, 1}, {1, 2, 4, 3}, {2}}도 모두 같은 튜플을 나타낸다
- s의 길이는 5 이상 1,000,000 이하이며, 숫자와 '{', '}', ','로만 이루어져 있다
    - 숫자가 0으로 시작하는 경우는 없다
    - s는 항상 중복되는 원소가 없는 튜플을 올바르게 표현한다
    - s가 표현하는 튜플의 원소는 1 이상 100,000 이하인 자연수이다
- s가 표현하는 튜플을 배열에 담아 리턴한다
- 리턴하는 배열의 길이가 1 이상 500 이하인 경우만 입력으로 주어진다

Example:
- Input : s="{{2},{2,1},{2,1,3},{2,1,3,4}}"
- Output : [2, 1, 3, 4]

- Input : s="{{1,2,3},{2,1},{1,2,4,3},{2}}"
- Output : [2, 1, 3, 4]

- Input : s="{{20,111},{111}}"
- Output : [111, 20]

- Input : s="{{123}}"
- Output : [123]

- Input : s="{{4,2,3},{3},{2,3,4,1},{2,3}}"
- Output : [3, 2, 4, 1]

Note:
문자열 s를 정수 리스트의 리스트로 변환 후 길이 순으로 정렬
집합 내에서는 순서가 변경될 수 있지만, 원소 1개인 리스트에는 a1만 존재하고, 원소 2개인 리스트에는 a1과 a2가 존재하는 식이기 때문에
이전 리스트에 포함되지 않은 원소를 구하면 튜플의 다음 원소가 된다

"""

def solution(s):
    sp = [list(map(int, t.split(","))) for t in s[2:-2].split("},{")]
    ssorted = sorted(sp, key=len)

    res = []
    for temp in ssorted:
        for t in temp:
            if t not in res:
                res.append(t)
                break

    return res
